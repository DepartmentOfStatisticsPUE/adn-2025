---
title: "2. Imputacja dedukcyjna"
format: 
  html:
    self-contained: true
    number-sections: true
    toc: true
    toc-title: "Spis treści"
editor: source
---

# Wczytanie potrzebych pakietów

::: panel-tabset
## R

```{r packages, message=F, warning=F}
library(data.table)
library(tidyr) ## funkcja fill
library(stringr)
library(zoo)
```

## Python

```{python}
import pandas as pd
import numpy as np
import re
```
:::


# Przykład imptuacji dedukcyjnej

Dane są posortowane wg liczby pokoi (`liczba_pokoi`) i zawierają następujące kolumny:

+ `id` -- identyfikator
+ `liczba_pokoi` -- liczba pokoi
+ `województwo` -- województwo (słownie)
+ `powiat` -- numer teryt (7 cyfrowy)
+ `cena` -- cena nieruchomości
+ `powierzchnia` -- powierzchnia nieruchomości
+ `tytul` -- tytuł ogłoszenia

Cel: zaimputowanie brakujących wartości.

::: panel-tabset
## R


```{r}
dane <- read.csv("../data/data3-przyklad-imputacji.csv")
head(dane)
```

```{r}
dane |> 
  fill(liczba_pokoi)
```

```{r}
zoo::na.locf(dane$liczba_pokoi)
```

```{r}
data.table::nafill(dane$liczba_pokoi, "locf")
```

Operacja `inplace`.

```{r}
data.table::setnafill(dane, "locf", cols = c("liczba_pokoi"))
dane
```

Na podstawie nr identyfikatora powiatu -> województwo

```{r}
substr("1465011", 1, 2)
```

`powierzchnia` -- na podstwie wyrażen regularnych

```{r}
str_extract("Przytulna kawalerka 32,1m2, 1 pokój w centrum!", "\\d{2},\\d{1}")
```

## Python

```{python}
dane = pd.read_csv("../data/data3-przyklad-imputacji.csv")
print(dane.head())
```

Odpowiednik `fill()` z `tidyverse`

```{python}
dane['liczba_pokoi'].fillna(method='ffill', inplace=False)
```

Odpowiednik `zoo::na.locf()`

```{python}
dane['liczba_pokoi'].ffill()
```


```{python}
"1465011"[:2]  # pierwsze 2 znaki
```

Odpowiednik `str_extract()`

```{python}
tekst = "Przytulna kawalerka 32,1m2, 1 pokój w centrum!"
pattern = r'\d{2},\d{1}'
match = re.search(pattern, tekst)
if match:
    print(match.group())
```

Alternatywnie z pandas

```{python}
s = pd.Series(["Przytulna kawalerka 32,1m2, 1 pokój w centrum!"])
s.str.extract(r'(\d{2},\d{1})')
```


:::

# Imputacja dedukcyjna z ograniczeniami



