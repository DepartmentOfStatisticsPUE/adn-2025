---
title: "1. Problematyka braków danych"
format: 
  html:
    self-contained: true
    number-sections: true
    toc: true
    toc-title: "Spis treści"
editor: source
---

# Wczytanie potrzebych pakietów

::: panel-tabset
## R

```{r packages, message=F, warning=F}
library(VIM)
library(naniar)
library(panelView)
library(ggplot2)
library(data.table)
```

## Python

```{python}
import pandas as pd
import numpy as np
import missingno as msno
import matplotlib.pyplot as plt
import seaborn as sns
```

:::


## Rozwiązanie zadania

Na github, w folderze, `data/` mogą Państwo znaleźć zbiór `data2-zajecia-przyklad1.csv`, który następujące kolumny: gmina, gmina_nazwa, rok i liczba osób na 1 km (`lud_na_1k`).

Zadania i pytania:

1. Wczytać zbiór danych.
2. Ile jest \% braków danych w kolumnie `lud_na_1k`? 
3. Ile jednostek (`gmina`) obserwujemy w zbiorze danych? 
4. Ile okresów (`rok`) obserwujemy w zbiorze danych?
5. Ile jednostek obserwujemy w całym okresie? 
6. Przedstawić wizualizację szeregu czasowego z~wykorzystaniem pakietu `panelView`.
7. Jakie wzorce obserwujemy w danych?
            
::: panel-tabset
## R

Ad 1. 

```{r wczytanie}
dane <- read.csv("../data/data2-zajecia-przyklad1.csv") |> setDT()
head(dane)
```

Ad 2. 

```{r}
mean(is.na(dane$lud_na_1k))
```

Ad 3. 

```{r}
length(unique(dane$gmina))
```

Ad 4. 

```{r}
length(unique(dane$rok))
```

Ad 5. 

```{r}
table(table(dane$gmina[!is.na(dane$lud_na_1k)]))
```

Żadnej! Maksymalnie obserwujemy 22 razy, dlaczego?


```{r}
setdiff(unique(dane$rok), unique(dane$rok[!is.na(dane$lud_na_1k)]))
```

Bo w 2000 i w 2001 mamy same braki danych. Możemy zobaczyć to samo korzystając z pakietu `VIM`

```{r}
dane |> 
  dcast(gmina + gmina_nazwa ~ rok, value.var = "lud_na_1k") |>
  VIM::aggr()
```

Ad 6.

```{r}
panelview(data = dane, formula = lud_na_1k ~ 1, index = c("gmina", "rok"), type = "missing")
```

Ad 7.

Wzorce mozemy znaleźć tutaj: 

```{r}
dane |> 
  dcast(gmina + gmina_nazwa ~ rok, value.var = "lud_na_1k") |>
  VIM::aggr()
```

Lub tutaj:

```{r}
dane |> 
  dcast(gmina + gmina_nazwa ~ rok, value.var = "lud_na_1k") |>
  gg_miss_upset(nsets = 24)
```

## Python

Ad 1.
```{python wczytanie-py}
# Read data
df = pd.read_csv("../data/data2-zajecia-przyklad1.csv")
df.head()
```

Ad 2.

```{python}
df['lud_na_1k'].isna().mean().round(4)
```

Ad 3.

```{python}
df['gmina'].nunique()
```

Ad 4.

```{python}
df['rok'].nunique()
```

Ad 5.

```{python}
gmina_counts = df.loc[~df['lud_na_1k'].isna(), 'gmina'].value_counts().value_counts()
gmina_counts
```

```{python}
all_years = set(df['rok'].unique())
years_with_data = set(df.loc[~df['lud_na_1k'].isna(), 'rok'].unique())
sorted(all_years - years_with_data)
```

Ad 6.

```{python}
df_wide = df.pivot(index=['gmina', 'gmina_nazwa'], 
                  columns='rok', 
                  values='lud_na_1k')

msno.matrix(df_wide)
plt.title('Missing Data Pattern')
plt.show()
```


```{python}
missing_pattern = df.pivot(index='gmina', 
                         columns='rok', 
                         values='lud_na_1k').isnull()
plt.figure(figsize=(12, 8))
sns.heatmap(missing_pattern, cbar=False, cmap='binary')
plt.title('Panel View of Missing Data')
plt.show()
```


Ad 7. TBA


:::